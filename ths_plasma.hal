# Generated by stepconf 1.1 at Fri Jan  7 17:58:02 2022
# If you make changes to this file, they will be
# overwritten when you run stepconf again
loadrt [KINS]KINEMATICS
loadrt [EMCMOT]EMCMOT base_period_nsec=[EMCMOT]BASE_PERIOD servo_period_nsec=[EMCMOT]SERVO_PERIOD num_joints=[KINS]JOINTS num_spindles=[TRAJ]SPINDLES
#loadrt sim_parport names=parport.0
loadrt hal_parport cfg="0 x"
setp parport.0.reset-time 2500
loadrt stepgen step_type=0,0,0
loadrt charge_pump
loadrt lut5
net estop-out charge-pump.enable iocontrol.0.user-enable-out
net charge-pump <= charge-pump.out

addf parport.0.read base-thread
#source sim_hardware.hal
addf stepgen.make-pulses base-thread
addf charge-pump base-thread
addf parport.0.write base-thread
addf parport.0.reset base-thread
addf lut5.0 servo-thread

addf stepgen.capture-position servo-thread
#addf sim-hardware.update servo-thread
addf motion-command-handler servo-thread
addf motion-controller servo-thread
addf stepgen.update-freq servo-thread
# net spindle-cmd-rpm     <= spindle.0.speed-out
# net spindle-cmd-rpm-abs <= spindle.0.speed-out-abs
# net spindle-cmd-rps     <= spindle.0.speed-out-rps
# net spindle-cmd-rps-abs <= spindle.0.speed-out-rps-abs
# net spindle-at-speed    => spindle.0.at-speed

net zstep           => parport.0.pin-02-out
setp parport.0.pin-02-out-reset 1
setp parport.0.pin-03-out-invert 1
net zdir            => parport.0.pin-03-out



#net ystep           => parport.0.pin-04-out
net ystep           => parport.0.pin-06-out
setp parport.0.pin-04-out-reset 1
setp parport.0.pin-05-out-invert 1
#net ydir            => parport.0.pin-05-out
net ydir            => parport.0.pin-07-out

#net xstep           => parport.0.pin-06-out
net xstep           => parport.0.pin-04-out
setp parport.0.pin-06-out-reset 1
#setp parport.0.pin-07-out-invert 1
#net xdir            => parport.0.pin-07-out
net xdir            => parport.0.pin-05-out

net charge-pump     => parport.0.pin-09-out
net estop-ext       <= parport.0.pin-10-in

net all-limit-home  <= parport.0.pin-01-in
setp lut5.0.function 0x10000
net all-limit-home => lut5.0.in-4
net all-limit <= lut5.0.out
net homing-x <= joint.0.homing => lut5.0.in-0
net homing-y <= joint.1.homing => lut5.0.in-1
net homing-z <= joint.2.homing => lut5.0.in-2


setp stepgen.0.position-scale [JOINT_0]SCALE
setp stepgen.0.steplen 1
setp stepgen.0.stepspace 0
setp stepgen.0.dirhold 45000
setp stepgen.0.dirsetup 45000
setp stepgen.0.maxaccel [JOINT_0]STEPGEN_MAXACCEL
net xpos-cmd joint.0.motor-pos-cmd => stepgen.0.position-cmd
net xpos-fb stepgen.0.position-fb => joint.0.motor-pos-fb
net xstep <= stepgen.0.step
net xdir <= stepgen.0.dir
net xenable joint.0.amp-enable-out => stepgen.0.enable
net all-limit-home => joint.0.home-sw-in
#net all-limit => joint.0.neg-lim-sw-in
#net all-limit => joint.0.pos-lim-sw-in



setp stepgen.1.position-scale [JOINT_1]SCALE
setp stepgen.1.steplen 1
setp stepgen.1.stepspace 0
setp stepgen.1.dirhold 45000
setp stepgen.1.dirsetup 45000
setp stepgen.1.maxaccel [JOINT_1]STEPGEN_MAXACCEL
net ypos-cmd joint.1.motor-pos-cmd => stepgen.1.position-cmd
net ypos-fb stepgen.1.position-fb => joint.1.motor-pos-fb
net ystep <= stepgen.1.step
net ydir <= stepgen.1.dir
net yenable joint.1.amp-enable-out => stepgen.1.enable
net all-limit-home => joint.1.home-sw-in
#net all-limit => joint.1.neg-lim-sw-in
#net all-limit => joint.1.pos-lim-sw-in



setp stepgen.2.position-scale [JOINT_2]SCALE
setp stepgen.2.steplen 1
setp stepgen.2.stepspace 0
setp stepgen.2.dirhold 45000
setp stepgen.2.dirsetup 45000
setp stepgen.2.maxaccel [JOINT_2]STEPGEN_MAXACCEL
net zpos-cmd joint.2.motor-pos-cmd => stepgen.2.position-cmd
net zpos-fb stepgen.2.position-fb => joint.2.motor-pos-fb
net zstep <= stepgen.2.step
net zdir <= stepgen.2.dir
net zenable joint.2.amp-enable-out => stepgen.2.enable
net all-limit-home => joint.2.home-sw-in
#net all-limit => joint.2.neg-lim-sw-in
#net all-limit => joint.2.pos-lim-sw-in



net estop-out <= iocontrol.0.user-enable-out
net estop-ext => iocontrol.0.emc-enable-in

# net tool-number <= iocontrol.0.tool-prep-number
# net tool-change-loopback iocontrol.0.tool-change => iocontrol.0.tool-changed
# net tool-prepare-loopback iocontrol.0.tool-prepare => iocontrol.0.tool-prepared

# toolchange passthrough
net tool:change iocontrol.0.tool-change  => iocontrol.0.tool-changed
net tool:prep   iocontrol.0.tool-prepare => iocontrol.0.tool-prepared
